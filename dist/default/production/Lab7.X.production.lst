

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 14 08:20:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0012                     _T2CONbits	set	18
   212     000C                     _PIR1bits	set	12
   213     001D                     _CCP2CONbits	set	29
   214     0017                     _CCP1CONbits	set	23
   215     001B                     _CCPR2L	set	27
   216     0015                     _CCPR1L	set	21
   217     001E                     _ADRESH	set	30
   218     001F                     _ADCON0bits	set	31
   219     0001                     _TMR0	set	1
   220     0007                     _PORTCbits	set	7
   221     000B                     _INTCONbits	set	11
   222     0066                     _ADIF	set	102
   223     0092                     _PR2	set	146
   224     0087                     _TRISCbits	set	135
   225     009F                     _ADCON1bits	set	159
   226     0085                     _TRISAbits	set	133
   227     0081                     _OPTION_REGbits	set	129
   228     008F                     _OSCCONbits	set	143
   229     0088                     _TRISD	set	136
   230     0087                     _TRISC	set	135
   231     0086                     _TRISB	set	134
   232     0188                     _ANSELbits	set	392
   233     0189                     _ANSELH	set	393
   234     0188                     _ANSEL	set	392
   235                           
   236                           	psect	cinit
   237     000F                     start_initialization:	
   238                           ; #config settings
   239                           
   240     000F                     __initialization:
   241                           
   242                           ; Clear objects allocated to COMMON
   243     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   244                           
   245                           ; Clear objects allocated to BANK0
   246     0010  1283               	bcf	3,5	;RP0=0, select bank0
   247     0011  1303               	bcf	3,6	;RP1=0, select bank0
   248     0012  01BE               	clrf	__pbssBANK0& (0+127)
   249     0013                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252     0013                     __end_of__initialization:
   253     0013  0183               	clrf	3
   254     0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMMON
   257     007A                     __pbssCOMMON:
   258     007A                     _contador:
   259     007A                     	ds	1
   260                           
   261                           	psect	bssBANK0
   262     003E                     __pbssBANK0:
   263     003E                     _pot_val3:
   264     003E                     	ds	1
   265                           
   266                           	psect	cstackCOMMON
   267     0070                     __pcstackCOMMON:
   268     0070                     ?_setup:
   269     0070                     ?_isr:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ??_isr:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 1 bytes @ 0x0
   280     0070                     	ds	3
   281     0073                     ??_setup:
   282     0073                     ?___wmul:	
   283                           ; 1 bytes @ 0x3
   284                           
   285     0073                     ___wmul@multiplier:	
   286                           ; 2 bytes @ 0x3
   287                           
   288                           
   289                           ; 2 bytes @ 0x3
   290     0073                     	ds	2
   291     0075                     ___wmul@multiplicand:
   292                           
   293                           ; 2 bytes @ 0x5
   294     0075                     	ds	2
   295     0077                     ??___wmul:
   296     0077                     ___wmul@product:	
   297                           ; 1 bytes @ 0x7
   298                           
   299                           
   300                           ; 2 bytes @ 0x7
   301     0077                     	ds	2
   302     0079                     ??___awdiv:
   303                           
   304                           ; 1 bytes @ 0x9
   305     0079                     	ds	1
   306     007A                     ??_mapear:
   307                           
   308                           	psect	cstackBANK0
   309     0020                     __pcstackBANK0:	
   310                           ; 1 bytes @ 0xA
   311                           
   312     0020                     ?___awdiv:
   313     0020                     ___awdiv@divisor:	
   314                           ; 2 bytes @ 0x0
   315                           
   316                           
   317                           ; 2 bytes @ 0x0
   318     0020                     	ds	2
   319     0022                     ___awdiv@dividend:
   320                           
   321                           ; 2 bytes @ 0x2
   322     0022                     	ds	2
   323     0024                     ___awdiv@counter:
   324                           
   325                           ; 1 bytes @ 0x4
   326     0024                     	ds	1
   327     0025                     ___awdiv@sign:
   328                           
   329                           ; 1 bytes @ 0x5
   330     0025                     	ds	1
   331     0026                     ___awdiv@quotient:
   332                           
   333                           ; 2 bytes @ 0x6
   334     0026                     	ds	2
   335     0028                     ?_mapear:
   336     0028                     mapear@valor:	
   337                           ; 2 bytes @ 0x8
   338                           
   339                           
   340                           ; 2 bytes @ 0x8
   341     0028                     	ds	2
   342     002A                     mapear@rango_min:
   343                           
   344                           ; 2 bytes @ 0xA
   345     002A                     	ds	2
   346     002C                     mapear@rango_max:
   347                           
   348                           ; 2 bytes @ 0xC
   349     002C                     	ds	2
   350     002E                     mapear@nuevo_min:
   351                           
   352                           ; 2 bytes @ 0xE
   353     002E                     	ds	2
   354     0030                     mapear@nuevo_max:
   355                           
   356                           ; 2 bytes @ 0x10
   357     0030                     	ds	2
   358     0032                     mapear@new_val:
   359                           
   360                           ; 2 bytes @ 0x12
   361     0032                     	ds	2
   362     0034                     ??_main:
   363                           
   364                           ; 1 bytes @ 0x14
   365     0034                     	ds	2
   366     0036                     main@adc_value_1:
   367                           
   368                           ; 2 bytes @ 0x16
   369     0036                     	ds	2
   370     0038                     main@servo1:
   371                           
   372                           ; 2 bytes @ 0x18
   373     0038                     	ds	2
   374     003A                     main@adc_value_2:
   375                           
   376                           ; 2 bytes @ 0x1A
   377     003A                     	ds	2
   378     003C                     main@servo2:
   379                           
   380                           ; 2 bytes @ 0x1C
   381     003C                     	ds	2
   382                           
   383                           	psect	maintext
   384     0017                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 64 in file "mainPostLab7.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  servo2          2   28[BANK0 ] int 
   395 ;;  adc_value_2     2   26[BANK0 ] int 
   396 ;;  servo1          2   24[BANK0 ] int 
   397 ;;  adc_value_1     2   22[BANK0 ] int 
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : B00/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       8       0       0       0
   409 ;;      Temps:          0       2       0       0       0
   410 ;;      Totals:         0      10       0       0       0
   411 ;;Total ram usage:       10 bytes
   412 ;; Hardware stack levels required when called: 3
   413 ;; This function calls:
   414 ;;		_mapear
   415 ;;		_setup
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     0017                     _main:	
   422                           ;psect for function _main
   423                           
   424     0017                     l1018:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;mainPostLab7.c: 65:     setup();
   430     0017  120A  118A  2120  120A  118A  	fcall	_setup
   431     001C                     l1020:
   432                           
   433                           ;mainPostLab7.c: 66:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   434     001C  3020               	movlw	32
   435     001D  1283               	bcf	3,5	;RP0=0, select bank0
   436     001E  1303               	bcf	3,6	;RP1=0, select bank0
   437     001F  00B4               	movwf	??_main
   438     0020                     u417:
   439     0020  0BB4               	decfsz	??_main,f
   440     0021  2820               	goto	u417
   441     0022  0000               	nop
   442     0023                     l1022:
   443                           
   444                           ;mainPostLab7.c: 69:         ADCON0bits.CHS = 0;
   445     0023  30C3               	movlw	-61
   446     0024  1283               	bcf	3,5	;RP0=0, select bank0
   447     0025  1303               	bcf	3,6	;RP1=0, select bank0
   448     0026  059F               	andwf	31,f	;volatile
   449     0027                     l1024:
   450                           
   451                           ;mainPostLab7.c: 70:         ADCON0bits.GO = 1;
   452     0027  149F               	bsf	31,1	;volatile
   453     0028                     l72:	
   454                           ;mainPostLab7.c: 71:         while(ADCON0bits.GO);
   455                           
   456     0028  189F               	btfsc	31,1	;volatile
   457     0029  282B               	goto	u381
   458     002A  282C               	goto	u380
   459     002B                     u381:
   460     002B  2828               	goto	l72
   461     002C                     u380:
   462     002C                     l1026:
   463                           
   464                           ;mainPostLab7.c: 72:         int adc_value_1 = ADRESH;
   465     002C  081E               	movf	30,w	;volatile
   466     002D  00B4               	movwf	??_main
   467     002E  01B5               	clrf	??_main+1
   468     002F  0834               	movf	??_main,w
   469     0030  00B6               	movwf	main@adc_value_1
   470     0031  0835               	movf	??_main+1,w
   471     0032  00B7               	movwf	main@adc_value_1+1
   472     0033                     l1028:
   473                           
   474                           ;mainPostLab7.c: 73:         int servo1 = mapear(adc_value_1, 0, 255, 125, 250);
   475     0033  0837               	movf	main@adc_value_1+1,w
   476     0034  00A9               	movwf	mapear@valor+1
   477     0035  0836               	movf	main@adc_value_1,w
   478     0036  00A8               	movwf	mapear@valor
   479     0037  3000               	movlw	0
   480     0038  00AA               	movwf	mapear@rango_min
   481     0039  00AB               	movwf	mapear@rango_min+1
   482     003A  30FF               	movlw	255
   483     003B  00AC               	movwf	mapear@rango_max
   484     003C  3000               	movlw	0
   485     003D  00AD               	movwf	mapear@rango_max+1
   486     003E  307D               	movlw	125
   487     003F  00AE               	movwf	mapear@nuevo_min
   488     0040  3000               	movlw	0
   489     0041  00AF               	movwf	mapear@nuevo_min+1
   490     0042  30FA               	movlw	250
   491     0043  00B0               	movwf	mapear@nuevo_max
   492     0044  3000               	movlw	0
   493     0045  00B1               	movwf	mapear@nuevo_max+1
   494     0046  120A  118A  2182  120A  118A  	fcall	_mapear
   495     004B  1283               	bcf	3,5	;RP0=0, select bank0
   496     004C  1303               	bcf	3,6	;RP1=0, select bank0
   497     004D  0829               	movf	?_mapear+1,w
   498     004E  00B9               	movwf	main@servo1+1
   499     004F  0828               	movf	?_mapear,w
   500     0050  00B8               	movwf	main@servo1
   501     0051                     l1030:
   502                           
   503                           ;mainPostLab7.c: 74:         CCPR1L = servo1;
   504     0051  0838               	movf	main@servo1,w
   505     0052  0095               	movwf	21	;volatile
   506     0053                     l1032:
   507                           
   508                           ;mainPostLab7.c: 75:         _delay((unsigned long)((10)*(8000000/4000.0)));
   509     0053  301A               	movlw	26
   510     0054  1283               	bcf	3,5	;RP0=0, select bank0
   511     0055  1303               	bcf	3,6	;RP1=0, select bank0
   512     0056  00B5               	movwf	??_main+1
   513     0057  30F7               	movlw	247
   514     0058  00B4               	movwf	??_main
   515     0059                     u427:
   516     0059  0BB4               	decfsz	??_main,f
   517     005A  2859               	goto	u427
   518     005B  0BB5               	decfsz	??_main+1,f
   519     005C  2859               	goto	u427
   520     005D  285E               	nop2
   521     005E                     l1034:
   522                           
   523                           ;mainPostLab7.c: 77:         ADCON0bits.CHS = 1;
   524     005E  1283               	bcf	3,5	;RP0=0, select bank0
   525     005F  1303               	bcf	3,6	;RP1=0, select bank0
   526     0060  081F               	movf	31,w	;volatile
   527     0061  39C3               	andlw	-61
   528     0062  3804               	iorlw	4
   529     0063  009F               	movwf	31	;volatile
   530     0064                     l1036:
   531                           
   532                           ;mainPostLab7.c: 78:         ADCON0bits.GO = 1;
   533     0064  149F               	bsf	31,1	;volatile
   534     0065                     l75:	
   535                           ;mainPostLab7.c: 79:         while(ADCON0bits.GO);
   536                           
   537     0065  189F               	btfsc	31,1	;volatile
   538     0066  2868               	goto	u391
   539     0067  2869               	goto	u390
   540     0068                     u391:
   541     0068  2865               	goto	l75
   542     0069                     u390:
   543     0069                     l1038:
   544                           
   545                           ;mainPostLab7.c: 80:         int adc_value_2 = ADRESH;
   546     0069  081E               	movf	30,w	;volatile
   547     006A  00B4               	movwf	??_main
   548     006B  01B5               	clrf	??_main+1
   549     006C  0834               	movf	??_main,w
   550     006D  00BA               	movwf	main@adc_value_2
   551     006E  0835               	movf	??_main+1,w
   552     006F  00BB               	movwf	main@adc_value_2+1
   553     0070                     l1040:
   554                           
   555                           ;mainPostLab7.c: 81:         int servo2 = mapear(adc_value_2, 0, 255, 125, 250);
   556     0070  083B               	movf	main@adc_value_2+1,w
   557     0071  00A9               	movwf	mapear@valor+1
   558     0072  083A               	movf	main@adc_value_2,w
   559     0073  00A8               	movwf	mapear@valor
   560     0074  3000               	movlw	0
   561     0075  00AA               	movwf	mapear@rango_min
   562     0076  00AB               	movwf	mapear@rango_min+1
   563     0077  30FF               	movlw	255
   564     0078  00AC               	movwf	mapear@rango_max
   565     0079  3000               	movlw	0
   566     007A  00AD               	movwf	mapear@rango_max+1
   567     007B  307D               	movlw	125
   568     007C  00AE               	movwf	mapear@nuevo_min
   569     007D  3000               	movlw	0
   570     007E  00AF               	movwf	mapear@nuevo_min+1
   571     007F  30FA               	movlw	250
   572     0080  00B0               	movwf	mapear@nuevo_max
   573     0081  3000               	movlw	0
   574     0082  00B1               	movwf	mapear@nuevo_max+1
   575     0083  120A  118A  2182  120A  118A  	fcall	_mapear
   576     0088  1283               	bcf	3,5	;RP0=0, select bank0
   577     0089  1303               	bcf	3,6	;RP1=0, select bank0
   578     008A  0829               	movf	?_mapear+1,w
   579     008B  00BD               	movwf	main@servo2+1
   580     008C  0828               	movf	?_mapear,w
   581     008D  00BC               	movwf	main@servo2
   582     008E                     l1042:
   583                           
   584                           ;mainPostLab7.c: 82:         CCPR2L = servo2;
   585     008E  083C               	movf	main@servo2,w
   586     008F  009B               	movwf	27	;volatile
   587     0090                     l1044:
   588                           
   589                           ;mainPostLab7.c: 83:         _delay((unsigned long)((10)*(8000000/4000.0)));
   590     0090  301A               	movlw	26
   591     0091  1283               	bcf	3,5	;RP0=0, select bank0
   592     0092  1303               	bcf	3,6	;RP1=0, select bank0
   593     0093  00B5               	movwf	??_main+1
   594     0094  30F7               	movlw	247
   595     0095  00B4               	movwf	??_main
   596     0096                     u437:
   597     0096  0BB4               	decfsz	??_main,f
   598     0097  2896               	goto	u437
   599     0098  0BB5               	decfsz	??_main+1,f
   600     0099  2896               	goto	u437
   601     009A  289B               	nop2
   602     009B                     l1046:
   603                           
   604                           ;mainPostLab7.c: 85:         ADCON0bits.CHS = 2;
   605     009B  1283               	bcf	3,5	;RP0=0, select bank0
   606     009C  1303               	bcf	3,6	;RP1=0, select bank0
   607     009D  081F               	movf	31,w	;volatile
   608     009E  39C3               	andlw	-61
   609     009F  3808               	iorlw	8
   610     00A0  009F               	movwf	31	;volatile
   611     00A1                     l1048:
   612                           
   613                           ;mainPostLab7.c: 86:         ADCON0bits.GO = 1;
   614     00A1  149F               	bsf	31,1	;volatile
   615     00A2                     l78:	
   616                           ;mainPostLab7.c: 87:         while(ADCON0bits.GO);
   617                           
   618     00A2  189F               	btfsc	31,1	;volatile
   619     00A3  28A5               	goto	u401
   620     00A4  28A6               	goto	u400
   621     00A5                     u401:
   622     00A5  28A2               	goto	l78
   623     00A6                     u400:
   624     00A6                     l1050:
   625                           
   626                           ;mainPostLab7.c: 88:         pot_val3 = ADRESH;
   627     00A6  081E               	movf	30,w	;volatile
   628     00A7  00BE               	movwf	_pot_val3
   629                           
   630                           ;mainPostLab7.c: 89:         _delay((unsigned long)((10)*(8000000/4000.0)));
   631     00A8  301A               	movlw	26
   632     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   633     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   634     00AB  00B5               	movwf	??_main+1
   635     00AC  30F7               	movlw	247
   636     00AD  00B4               	movwf	??_main
   637     00AE                     u447:
   638     00AE  0BB4               	decfsz	??_main,f
   639     00AF  28AE               	goto	u447
   640     00B0  0BB5               	decfsz	??_main+1,f
   641     00B1  28AE               	goto	u447
   642     00B2  28B3               	nop2
   643     00B3  2823               	goto	l1022
   644     00B4  120A  118A  280C   	ljmp	start
   645     00B7                     __end_of_main:
   646                           
   647                           	psect	text1
   648     0120                     __ptext1:	
   649 ;; *************** function _setup *****************
   650 ;; Defined at:
   651 ;;		line 94 in file "mainPostLab7.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, status,2, status,0
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0
   667 ;;      Temps:          2       0       0       0       0
   668 ;;      Totals:         2       0       0       0       0
   669 ;;Total ram usage:        2 bytes
   670 ;; Hardware stack levels used: 1
   671 ;; Hardware stack levels required when called: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679     0120                     _setup:	
   680                           ;psect for function _setup
   681                           
   682     0120                     l926:	
   683                           ;incstack = 0
   684                           ; Regs used in _setup: [wreg+status,2+status,0]
   685                           
   686                           
   687                           ;mainPostLab7.c: 97:     ANSEL = 0;
   688     0120  1683               	bsf	3,5	;RP0=1, select bank3
   689     0121  1703               	bsf	3,6	;RP1=1, select bank3
   690     0122  0188               	clrf	8	;volatile
   691                           
   692                           ;mainPostLab7.c: 98:     ANSELH = 0;
   693     0123  0189               	clrf	9	;volatile
   694                           
   695                           ;mainPostLab7.c: 101:     TRISB = 0;
   696     0124  1683               	bsf	3,5	;RP0=1, select bank1
   697     0125  1303               	bcf	3,6	;RP1=0, select bank1
   698     0126  0186               	clrf	6	;volatile
   699                           
   700                           ;mainPostLab7.c: 102:     TRISC = 0;
   701     0127  0187               	clrf	7	;volatile
   702                           
   703                           ;mainPostLab7.c: 103:     TRISD = 0;
   704     0128  0188               	clrf	8	;volatile
   705     0129                     l928:
   706                           
   707                           ;mainPostLab7.c: 106:     OSCCONbits.IRCF = 0b111;
   708     0129  3070               	movlw	112
   709     012A  048F               	iorwf	15,f	;volatile
   710     012B                     l930:
   711                           
   712                           ;mainPostLab7.c: 107:     OSCCONbits.SCS = 1;
   713     012B  140F               	bsf	15,0	;volatile
   714     012C                     l932:
   715                           
   716                           ;mainPostLab7.c: 110:     OPTION_REGbits.T0CS = 0;
   717     012C  1281               	bcf	1,5	;volatile
   718     012D                     l934:
   719                           
   720                           ;mainPostLab7.c: 111:     OPTION_REGbits.PSA = 0;
   721     012D  1181               	bcf	1,3	;volatile
   722     012E                     l936:
   723                           
   724                           ;mainPostLab7.c: 112:     OPTION_REGbits.PS = 0b11;
   725     012E  0801               	movf	1,w	;volatile
   726     012F  39F8               	andlw	-8
   727     0130  3803               	iorlw	3
   728     0131  0081               	movwf	1	;volatile
   729     0132                     l938:
   730                           
   731                           ;mainPostLab7.c: 113:     TMR0 = 200;
   732     0132  30C8               	movlw	200
   733     0133  1283               	bcf	3,5	;RP0=0, select bank0
   734     0134  1303               	bcf	3,6	;RP1=0, select bank0
   735     0135  0081               	movwf	1	;volatile
   736     0136                     l940:
   737                           
   738                           ;mainPostLab7.c: 116:     INTCONbits.T0IF = 0;
   739     0136  110B               	bcf	11,2	;volatile
   740     0137                     l942:
   741                           
   742                           ;mainPostLab7.c: 117:     INTCONbits.T0IE = 1;
   743     0137  168B               	bsf	11,5	;volatile
   744     0138                     l944:
   745                           
   746                           ;mainPostLab7.c: 118:     INTCONbits.PEIE = 1;
   747     0138  170B               	bsf	11,6	;volatile
   748     0139                     l946:
   749                           
   750                           ;mainPostLab7.c: 119:     INTCONbits.GIE = 1;
   751     0139  178B               	bsf	11,7	;volatile
   752     013A                     l948:
   753                           
   754                           ;mainPostLab7.c: 122:     ANSELbits.ANS0 = 1;
   755     013A  1683               	bsf	3,5	;RP0=1, select bank3
   756     013B  1703               	bsf	3,6	;RP1=1, select bank3
   757     013C  1408               	bsf	8,0	;volatile
   758     013D                     l950:
   759                           
   760                           ;mainPostLab7.c: 123:     ANSELbits.ANS1 = 1;
   761     013D  1488               	bsf	8,1	;volatile
   762     013E                     l952:
   763                           
   764                           ;mainPostLab7.c: 124:     TRISAbits.TRISA0 = 1;
   765     013E  1683               	bsf	3,5	;RP0=1, select bank1
   766     013F  1303               	bcf	3,6	;RP1=0, select bank1
   767     0140  1405               	bsf	5,0	;volatile
   768     0141                     l954:
   769                           
   770                           ;mainPostLab7.c: 125:     TRISAbits.TRISA1 = 1;
   771     0141  1485               	bsf	5,1	;volatile
   772     0142                     l956:
   773                           
   774                           ;mainPostLab7.c: 126:     ADCON0bits.ADCS = 0b10;
   775     0142  1283               	bcf	3,5	;RP0=0, select bank0
   776     0143  1303               	bcf	3,6	;RP1=0, select bank0
   777     0144  081F               	movf	31,w	;volatile
   778     0145  393F               	andlw	-193
   779     0146  3880               	iorlw	128
   780     0147  009F               	movwf	31	;volatile
   781     0148                     l958:
   782                           
   783                           ;mainPostLab7.c: 127:     _delay((unsigned long)((1)*(8000000/4000.0)));
   784     0148  3003               	movlw	3
   785     0149  00F4               	movwf	??_setup+1
   786     014A  3097               	movlw	151
   787     014B  00F3               	movwf	??_setup
   788     014C                     u457:
   789     014C  0BF3               	decfsz	??_setup,f
   790     014D  294C               	goto	u457
   791     014E  0BF4               	decfsz	??_setup+1,f
   792     014F  294C               	goto	u457
   793     0150  2951               	nop2
   794     0151                     l960:
   795                           
   796                           ;mainPostLab7.c: 128:     ADCON1bits.ADFM = 0;
   797     0151  1683               	bsf	3,5	;RP0=1, select bank1
   798     0152  1303               	bcf	3,6	;RP1=0, select bank1
   799     0153  139F               	bcf	31,7	;volatile
   800     0154                     l962:
   801                           
   802                           ;mainPostLab7.c: 129:     ADCON1bits.VCFG0 = 0;
   803     0154  121F               	bcf	31,4	;volatile
   804     0155                     l964:
   805                           
   806                           ;mainPostLab7.c: 130:     ADCON1bits.VCFG1 = 0;
   807     0155  129F               	bcf	31,5	;volatile
   808     0156                     l966:
   809                           
   810                           ;mainPostLab7.c: 131:     ADCON0bits.ADON = 1;
   811     0156  1283               	bcf	3,5	;RP0=0, select bank0
   812     0157  1303               	bcf	3,6	;RP1=0, select bank0
   813     0158  141F               	bsf	31,0	;volatile
   814     0159                     l968:
   815                           
   816                           ;mainPostLab7.c: 132:     ADIF = 0;
   817     0159  130C               	bcf	12,6	;volatile
   818     015A                     l970:
   819                           
   820                           ;mainPostLab7.c: 136:     TRISCbits.TRISC2 = 1;
   821     015A  1683               	bsf	3,5	;RP0=1, select bank1
   822     015B  1303               	bcf	3,6	;RP1=0, select bank1
   823     015C  1507               	bsf	7,2	;volatile
   824     015D                     l972:
   825                           
   826                           ;mainPostLab7.c: 137:     TRISCbits.TRISC1 = 1;
   827     015D  1487               	bsf	7,1	;volatile
   828     015E                     l974:
   829                           
   830                           ;mainPostLab7.c: 139:     PR2 = 250;
   831     015E  30FA               	movlw	250
   832     015F  0092               	movwf	18	;volatile
   833     0160                     l976:
   834                           
   835                           ;mainPostLab7.c: 141:     CCP1CONbits.P1M = 0;
   836     0160  303F               	movlw	-193
   837     0161  1283               	bcf	3,5	;RP0=0, select bank0
   838     0162  1303               	bcf	3,6	;RP1=0, select bank0
   839     0163  0597               	andwf	23,f	;volatile
   840     0164                     l978:
   841                           
   842                           ;mainPostLab7.c: 142:     CCP1CONbits.CCP1M = 0b00001100;
   843     0164  0817               	movf	23,w	;volatile
   844     0165  39F0               	andlw	-16
   845     0166  380C               	iorlw	12
   846     0167  0097               	movwf	23	;volatile
   847     0168                     l980:
   848                           
   849                           ;mainPostLab7.c: 143:     CCP2CONbits.CCP2M = 0b00001100;
   850     0168  081D               	movf	29,w	;volatile
   851     0169  39F0               	andlw	-16
   852     016A  380C               	iorlw	12
   853     016B  009D               	movwf	29	;volatile
   854     016C                     l982:
   855                           
   856                           ;mainPostLab7.c: 145:     CCPR1L = 0x0f;
   857     016C  300F               	movlw	15
   858     016D  0095               	movwf	21	;volatile
   859     016E                     l984:
   860                           
   861                           ;mainPostLab7.c: 146:     CCPR2L = 0x0f;
   862     016E  300F               	movlw	15
   863     016F  009B               	movwf	27	;volatile
   864     0170                     l986:
   865                           
   866                           ;mainPostLab7.c: 147:     CCP1CONbits.DC1B1 = 0;
   867     0170  1297               	bcf	23,5	;volatile
   868     0171                     l988:
   869                           
   870                           ;mainPostLab7.c: 148:     CCP1CONbits.DC1B0 = 0;
   871     0171  1217               	bcf	23,4	;volatile
   872     0172                     l990:
   873                           
   874                           ;mainPostLab7.c: 149:     CCP2CONbits.DC2B1 = 0;
   875     0172  129D               	bcf	29,5	;volatile
   876     0173                     l992:
   877                           
   878                           ;mainPostLab7.c: 150:     CCP2CONbits.DC2B0 = 0;
   879     0173  121D               	bcf	29,4	;volatile
   880     0174                     l994:
   881                           
   882                           ;mainPostLab7.c: 152:     PIR1bits.TMR2IF = 0;
   883     0174  108C               	bcf	12,1	;volatile
   884     0175                     l996:
   885                           
   886                           ;mainPostLab7.c: 153:     T2CONbits.T2CKPS = 0b11;
   887     0175  3003               	movlw	3
   888     0176  0492               	iorwf	18,f	;volatile
   889     0177                     l998:
   890                           
   891                           ;mainPostLab7.c: 154:     T2CONbits.TMR2ON = 1;
   892     0177  1512               	bsf	18,2	;volatile
   893     0178                     l86:	
   894                           ;mainPostLab7.c: 156:     while (!PIR1bits.TMR2IF);
   895                           
   896     0178  1C8C               	btfss	12,1	;volatile
   897     0179  297B               	goto	u351
   898     017A  297C               	goto	u350
   899     017B                     u351:
   900     017B  2978               	goto	l86
   901     017C                     u350:
   902     017C                     l88:
   903                           
   904                           ;mainPostLab7.c: 157:     PIR1bits.TMR2IF = 0;
   905     017C  108C               	bcf	12,1	;volatile
   906                           
   907                           ;mainPostLab7.c: 159:     TRISCbits.TRISC2 = 0;
   908     017D  1683               	bsf	3,5	;RP0=1, select bank1
   909     017E  1303               	bcf	3,6	;RP1=0, select bank1
   910     017F  1107               	bcf	7,2	;volatile
   911                           
   912                           ;mainPostLab7.c: 160:     TRISCbits.TRISC1 = 0;
   913     0180  1087               	bcf	7,1	;volatile
   914     0181                     l89:	
   915                           ;mainPostLab7.c: 161:     return;
   916                           
   917     0181  0008               	return
   918     0182                     __end_of_setup:
   919                           
   920                           	psect	text2
   921     0182                     __ptext2:	
   922 ;; *************** function _mapear *****************
   923 ;; Defined at:
   924 ;;		line 168 in file "mainPostLab7.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  valor           2    8[BANK0 ] int 
   927 ;;  rango_min       2   10[BANK0 ] int 
   928 ;;  rango_max       2   12[BANK0 ] int 
   929 ;;  nuevo_min       2   14[BANK0 ] int 
   930 ;;  nuevo_max       2   16[BANK0 ] int 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  new_val         2   18[BANK0 ] int 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  2    8[BANK0 ] int 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         0      10       0       0       0
   943 ;;      Locals:         0       2       0       0       0
   944 ;;      Temps:          0       0       0       0       0
   945 ;;      Totals:         0      12       0       0       0
   946 ;;Total ram usage:       12 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 2
   949 ;; This function calls:
   950 ;;		___awdiv
   951 ;;		___wmul
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957     0182                     _mapear:	
   958                           ;psect for function _mapear
   959                           
   960     0182                     l1000:	
   961                           ;incstack = 0
   962                           ; Regs used in _mapear: [wreg+status,2+status,0+pclath+cstack]
   963                           
   964                           
   965                           ;mainPostLab7.c: 168: int mapear(int valor, int rango_min, int rango_max, int nuevo_min,
      +                           int nuevo_max);mainPostLab7.c: 169: {;mainPostLab7.c: 170:     int new_val = nuevo_min 
      +                          + (valor - rango_min)*(nuevo_max - nuevo_min)/(rango_max - rango_min);
   966     0182  1283               	bcf	3,5	;RP0=0, select bank0
   967     0183  1303               	bcf	3,6	;RP1=0, select bank0
   968     0184  082A               	movf	mapear@rango_min,w
   969     0185  022C               	subwf	mapear@rango_max,w
   970     0186  00A0               	movwf	___awdiv@divisor
   971     0187  082B               	movf	mapear@rango_min+1,w
   972     0188  1C03               	skipc
   973     0189  0A2B               	incf	mapear@rango_min+1,w
   974     018A  022D               	subwf	mapear@rango_max+1,w
   975     018B  00A1               	movwf	___awdiv@divisor+1
   976     018C  082A               	movf	mapear@rango_min,w
   977     018D  0228               	subwf	mapear@valor,w
   978     018E  00F3               	movwf	___wmul@multiplier
   979     018F  082B               	movf	mapear@rango_min+1,w
   980     0190  1C03               	skipc
   981     0191  0A2B               	incf	mapear@rango_min+1,w
   982     0192  0229               	subwf	mapear@valor+1,w
   983     0193  00F4               	movwf	___wmul@multiplier+1
   984     0194  082E               	movf	mapear@nuevo_min,w
   985     0195  0230               	subwf	mapear@nuevo_max,w
   986     0196  00F5               	movwf	___wmul@multiplicand
   987     0197  082F               	movf	mapear@nuevo_min+1,w
   988     0198  1C03               	skipc
   989     0199  0A2F               	incf	mapear@nuevo_min+1,w
   990     019A  0231               	subwf	mapear@nuevo_max+1,w
   991     019B  00F6               	movwf	___wmul@multiplicand+1
   992     019C  120A  118A  21BB  120A  118A  	fcall	___wmul
   993     01A1  0874               	movf	?___wmul+1,w
   994     01A2  1283               	bcf	3,5	;RP0=0, select bank0
   995     01A3  1303               	bcf	3,6	;RP1=0, select bank0
   996     01A4  00A3               	movwf	___awdiv@dividend+1
   997     01A5  0873               	movf	?___wmul,w
   998     01A6  00A2               	movwf	___awdiv@dividend
   999     01A7  120A  118A  20B7  120A  118A  	fcall	___awdiv
  1000     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1001     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1002     01AE  082E               	movf	mapear@nuevo_min,w
  1003     01AF  0720               	addwf	?___awdiv,w
  1004     01B0  00B2               	movwf	mapear@new_val
  1005     01B1  082F               	movf	mapear@nuevo_min+1,w
  1006     01B2  1803               	skipnc
  1007     01B3  0A2F               	incf	mapear@nuevo_min+1,w
  1008     01B4  0721               	addwf	?___awdiv+1,w
  1009     01B5  00B3               	movwf	mapear@new_val+1
  1010     01B6                     l1002:
  1011                           
  1012                           ;mainPostLab7.c: 171:     return new_val;
  1013     01B6  0833               	movf	mapear@new_val+1,w
  1014     01B7  00A9               	movwf	?_mapear+1
  1015     01B8  0832               	movf	mapear@new_val,w
  1016     01B9  00A8               	movwf	?_mapear
  1017     01BA                     l92:
  1018     01BA  0008               	return
  1019     01BB                     __end_of_mapear:
  1020                           
  1021                           	psect	text3
  1022     01BB                     __ptext3:	
  1023 ;; *************** function ___wmul *****************
  1024 ;; Defined at:
  1025 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  multiplier      2    3[COMMON] unsigned int 
  1028 ;;  multiplicand    2    5[COMMON] unsigned int 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  product         2    7[COMMON] unsigned int 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  2    3[COMMON] unsigned int 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         4       0       0       0       0
  1041 ;;      Locals:         2       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0
  1043 ;;      Totals:         6       0       0       0       0
  1044 ;;Total ram usage:        6 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 1
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_mapear
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054     01BB                     ___wmul:	
  1055                           ;psect for function ___wmul
  1056                           
  1057     01BB                     l868:	
  1058                           ;incstack = 0
  1059                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1060                           
  1061     01BB  01F7               	clrf	___wmul@product
  1062     01BC  01F8               	clrf	___wmul@product+1
  1063     01BD                     l870:
  1064     01BD  1C73               	btfss	___wmul@multiplier,0
  1065     01BE  29C0               	goto	u211
  1066     01BF  29C1               	goto	u210
  1067     01C0                     u211:
  1068     01C0  29C7               	goto	l178
  1069     01C1                     u210:
  1070     01C1                     l872:
  1071     01C1  0875               	movf	___wmul@multiplicand,w
  1072     01C2  07F7               	addwf	___wmul@product,f
  1073     01C3  1803               	skipnc
  1074     01C4  0AF8               	incf	___wmul@product+1,f
  1075     01C5  0876               	movf	___wmul@multiplicand+1,w
  1076     01C6  07F8               	addwf	___wmul@product+1,f
  1077     01C7                     l178:
  1078     01C7  3001               	movlw	1
  1079     01C8                     u225:
  1080     01C8  1003               	clrc
  1081     01C9  0DF5               	rlf	___wmul@multiplicand,f
  1082     01CA  0DF6               	rlf	___wmul@multiplicand+1,f
  1083     01CB  3EFF               	addlw	-1
  1084     01CC  1D03               	skipz
  1085     01CD  29C8               	goto	u225
  1086     01CE                     l874:
  1087     01CE  3001               	movlw	1
  1088     01CF                     u235:
  1089     01CF  1003               	clrc
  1090     01D0  0CF4               	rrf	___wmul@multiplier+1,f
  1091     01D1  0CF3               	rrf	___wmul@multiplier,f
  1092     01D2  3EFF               	addlw	-1
  1093     01D3  1D03               	skipz
  1094     01D4  29CF               	goto	u235
  1095     01D5                     l876:
  1096     01D5  0873               	movf	___wmul@multiplier,w
  1097     01D6  0474               	iorwf	___wmul@multiplier+1,w
  1098     01D7  1D03               	btfss	3,2
  1099     01D8  29DA               	goto	u241
  1100     01D9  29DB               	goto	u240
  1101     01DA                     u241:
  1102     01DA  29BD               	goto	l870
  1103     01DB                     u240:
  1104     01DB                     l878:
  1105     01DB  0878               	movf	___wmul@product+1,w
  1106     01DC  00F4               	movwf	?___wmul+1
  1107     01DD  0877               	movf	___wmul@product,w
  1108     01DE  00F3               	movwf	?___wmul
  1109     01DF                     l180:
  1110     01DF  0008               	return
  1111     01E0                     __end_of___wmul:
  1112                           
  1113                           	psect	text4
  1114     00B7                     __ptext4:	
  1115 ;; *************** function ___awdiv *****************
  1116 ;; Defined at:
  1117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  divisor         2    0[BANK0 ] int 
  1120 ;;  dividend        2    2[BANK0 ] int 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  quotient        2    6[BANK0 ] int 
  1123 ;;  sign            1    5[BANK0 ] unsigned char 
  1124 ;;  counter         1    4[BANK0 ] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  2    0[BANK0 ] int 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       4       0       0       0
  1135 ;;      Locals:         0       4       0       0       0
  1136 ;;      Temps:          1       0       0       0       0
  1137 ;;      Totals:         1       8       0       0       0
  1138 ;;Total ram usage:        9 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 1
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_mapear
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148     00B7                     ___awdiv:	
  1149                           ;psect for function ___awdiv
  1150                           
  1151     00B7                     l882:	
  1152                           ;incstack = 0
  1153                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1154                           
  1155     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1156     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1157     00B9  01A5               	clrf	___awdiv@sign
  1158     00BA                     l884:
  1159     00BA  1FA1               	btfss	___awdiv@divisor+1,7
  1160     00BB  28BD               	goto	u251
  1161     00BC  28BE               	goto	u250
  1162     00BD                     u251:
  1163     00BD  28C5               	goto	l890
  1164     00BE                     u250:
  1165     00BE                     l886:
  1166     00BE  09A0               	comf	___awdiv@divisor,f
  1167     00BF  09A1               	comf	___awdiv@divisor+1,f
  1168     00C0  0AA0               	incf	___awdiv@divisor,f
  1169     00C1  1903               	skipnz
  1170     00C2  0AA1               	incf	___awdiv@divisor+1,f
  1171     00C3                     l888:
  1172     00C3  01A5               	clrf	___awdiv@sign
  1173     00C4  0AA5               	incf	___awdiv@sign,f
  1174     00C5                     l890:
  1175     00C5  1FA3               	btfss	___awdiv@dividend+1,7
  1176     00C6  28C8               	goto	u261
  1177     00C7  28C9               	goto	u260
  1178     00C8                     u261:
  1179     00C8  28D2               	goto	l896
  1180     00C9                     u260:
  1181     00C9                     l892:
  1182     00C9  09A2               	comf	___awdiv@dividend,f
  1183     00CA  09A3               	comf	___awdiv@dividend+1,f
  1184     00CB  0AA2               	incf	___awdiv@dividend,f
  1185     00CC  1903               	skipnz
  1186     00CD  0AA3               	incf	___awdiv@dividend+1,f
  1187     00CE                     l894:
  1188     00CE  3001               	movlw	1
  1189     00CF  00F9               	movwf	??___awdiv
  1190     00D0  0879               	movf	??___awdiv,w
  1191     00D1  06A5               	xorwf	___awdiv@sign,f
  1192     00D2                     l896:
  1193     00D2  01A6               	clrf	___awdiv@quotient
  1194     00D3  01A7               	clrf	___awdiv@quotient+1
  1195     00D4                     l898:
  1196     00D4  0820               	movf	___awdiv@divisor,w
  1197     00D5  0421               	iorwf	___awdiv@divisor+1,w
  1198     00D6  1903               	btfsc	3,2
  1199     00D7  28D9               	goto	u271
  1200     00D8  28DA               	goto	u270
  1201     00D9                     u271:
  1202     00D9  2911               	goto	l918
  1203     00DA                     u270:
  1204     00DA                     l900:
  1205     00DA  01A4               	clrf	___awdiv@counter
  1206     00DB  0AA4               	incf	___awdiv@counter,f
  1207     00DC  28E8               	goto	l906
  1208     00DD                     l902:
  1209     00DD  3001               	movlw	1
  1210     00DE                     u285:
  1211     00DE  1003               	clrc
  1212     00DF  0DA0               	rlf	___awdiv@divisor,f
  1213     00E0  0DA1               	rlf	___awdiv@divisor+1,f
  1214     00E1  3EFF               	addlw	-1
  1215     00E2  1D03               	skipz
  1216     00E3  28DE               	goto	u285
  1217     00E4                     l904:
  1218     00E4  3001               	movlw	1
  1219     00E5  00F9               	movwf	??___awdiv
  1220     00E6  0879               	movf	??___awdiv,w
  1221     00E7  07A4               	addwf	___awdiv@counter,f
  1222     00E8                     l906:
  1223     00E8  1FA1               	btfss	___awdiv@divisor+1,7
  1224     00E9  28EB               	goto	u291
  1225     00EA  28EC               	goto	u290
  1226     00EB                     u291:
  1227     00EB  28DD               	goto	l902
  1228     00EC                     u290:
  1229     00EC                     l908:
  1230     00EC  3001               	movlw	1
  1231     00ED                     u305:
  1232     00ED  1003               	clrc
  1233     00EE  0DA6               	rlf	___awdiv@quotient,f
  1234     00EF  0DA7               	rlf	___awdiv@quotient+1,f
  1235     00F0  3EFF               	addlw	-1
  1236     00F1  1D03               	skipz
  1237     00F2  28ED               	goto	u305
  1238     00F3  0821               	movf	___awdiv@divisor+1,w
  1239     00F4  0223               	subwf	___awdiv@dividend+1,w
  1240     00F5  1D03               	skipz
  1241     00F6  28F9               	goto	u315
  1242     00F7  0820               	movf	___awdiv@divisor,w
  1243     00F8  0222               	subwf	___awdiv@dividend,w
  1244     00F9                     u315:
  1245     00F9  1C03               	skipc
  1246     00FA  28FC               	goto	u311
  1247     00FB  28FD               	goto	u310
  1248     00FC                     u311:
  1249     00FC  2904               	goto	l914
  1250     00FD                     u310:
  1251     00FD                     l910:
  1252     00FD  0820               	movf	___awdiv@divisor,w
  1253     00FE  02A2               	subwf	___awdiv@dividend,f
  1254     00FF  0821               	movf	___awdiv@divisor+1,w
  1255     0100  1C03               	skipc
  1256     0101  03A3               	decf	___awdiv@dividend+1,f
  1257     0102  02A3               	subwf	___awdiv@dividend+1,f
  1258     0103                     l912:
  1259     0103  1426               	bsf	___awdiv@quotient,0
  1260     0104                     l914:
  1261     0104  3001               	movlw	1
  1262     0105                     u325:
  1263     0105  1003               	clrc
  1264     0106  0CA1               	rrf	___awdiv@divisor+1,f
  1265     0107  0CA0               	rrf	___awdiv@divisor,f
  1266     0108  3EFF               	addlw	-1
  1267     0109  1D03               	skipz
  1268     010A  2905               	goto	u325
  1269     010B                     l916:
  1270     010B  3001               	movlw	1
  1271     010C  02A4               	subwf	___awdiv@counter,f
  1272     010D  1D03               	btfss	3,2
  1273     010E  2910               	goto	u331
  1274     010F  2911               	goto	u330
  1275     0110                     u331:
  1276     0110  28EC               	goto	l908
  1277     0111                     u330:
  1278     0111                     l918:
  1279     0111  0825               	movf	___awdiv@sign,w
  1280     0112  1903               	btfsc	3,2
  1281     0113  2915               	goto	u341
  1282     0114  2916               	goto	u340
  1283     0115                     u341:
  1284     0115  291B               	goto	l922
  1285     0116                     u340:
  1286     0116                     l920:
  1287     0116  09A6               	comf	___awdiv@quotient,f
  1288     0117  09A7               	comf	___awdiv@quotient+1,f
  1289     0118  0AA6               	incf	___awdiv@quotient,f
  1290     0119  1903               	skipnz
  1291     011A  0AA7               	incf	___awdiv@quotient+1,f
  1292     011B                     l922:
  1293     011B  0827               	movf	___awdiv@quotient+1,w
  1294     011C  00A1               	movwf	?___awdiv+1
  1295     011D  0826               	movf	___awdiv@quotient,w
  1296     011E  00A0               	movwf	?___awdiv
  1297     011F                     l331:
  1298     011F  0008               	return
  1299     0120                     __end_of___awdiv:
  1300                           
  1301                           	psect	text5
  1302     01E0                     __ptext5:	
  1303 ;; *************** function _isr *****************
  1304 ;; Defined at:
  1305 ;;		line 50 in file "mainPostLab7.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0
  1321 ;;      Temps:          3       0       0       0       0
  1322 ;;      Totals:         3       0       0       0       0
  1323 ;;Total ram usage:        3 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		Interrupt level 1
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332     01E0                     _isr:	
  1333                           ;psect for function _isr
  1334                           
  1335     01E0                     i1l1006:
  1336                           
  1337                           ;mainPostLab7.c: 52:     if (INTCONbits.T0IF)
  1338     01E0  1D0B               	btfss	11,2	;volatile
  1339     01E1  29E3               	goto	u36_21
  1340     01E2  29E4               	goto	u36_20
  1341     01E3                     u36_21:
  1342     01E3  29F6               	goto	i1l66
  1343     01E4                     u36_20:
  1344     01E4                     i1l1008:
  1345                           
  1346                           ;mainPostLab7.c: 53:     {;mainPostLab7.c: 54:         contador++;
  1347     01E4  3001               	movlw	1
  1348     01E5  00F0               	movwf	??_isr
  1349     01E6  0870               	movf	??_isr,w
  1350     01E7  07FA               	addwf	_contador,f
  1351     01E8                     i1l1010:
  1352                           
  1353                           ;mainPostLab7.c: 55:         if (contador < pot_val3)
  1354     01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1355     01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1356     01EA  083E               	movf	_pot_val3,w
  1357     01EB  027A               	subwf	_contador,w
  1358     01EC  1803               	skipnc
  1359     01ED  29EF               	goto	u37_21
  1360     01EE  29F0               	goto	u37_20
  1361     01EF                     u37_21:
  1362     01EF  29F2               	goto	i1l64
  1363     01F0                     u37_20:
  1364     01F0                     i1l1012:
  1365                           
  1366                           ;mainPostLab7.c: 56:             PORTCbits.RC3 = 1;
  1367     01F0  1587               	bsf	7,3	;volatile
  1368     01F1  29F3               	goto	i1l1014
  1369     01F2                     i1l64:	
  1370                           ;mainPostLab7.c: 57:         else
  1371                           
  1372                           
  1373                           ;mainPostLab7.c: 58:             PORTCbits.RC3 = 0;
  1374     01F2  1187               	bcf	7,3	;volatile
  1375     01F3                     i1l1014:
  1376                           
  1377                           ;mainPostLab7.c: 59:         TMR0 = 6;
  1378     01F3  3006               	movlw	6
  1379     01F4  0081               	movwf	1	;volatile
  1380     01F5                     i1l1016:
  1381                           
  1382                           ;mainPostLab7.c: 60:         INTCONbits.T0IF = 0;
  1383     01F5  110B               	bcf	11,2	;volatile
  1384     01F6                     i1l66:
  1385     01F6  0872               	movf	??_isr+2,w
  1386     01F7  008A               	movwf	10
  1387     01F8  0E71               	swapf	??_isr+1,w
  1388     01F9  0083               	movwf	3
  1389     01FA  0EFE               	swapf	btemp,f
  1390     01FB  0E7E               	swapf	btemp,w
  1391     01FC  0009               	retfie
  1392     01FD                     __end_of_isr:
  1393     007E                     btemp	set	126	;btemp
  1394     007E                     wtemp0	set	126
  1395                           
  1396                           	psect	intentry
  1397     0004                     __pintentry:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _isr: [wreg+status,2+status,0]
  1400                           
  1401     0004                     interrupt_function:
  1402     007E                     saved_w	set	btemp
  1403     0004  00FE               	movwf	btemp
  1404     0005  0E03               	swapf	3,w
  1405     0006  00F1               	movwf	??_isr+1
  1406     0007  080A               	movf	10,w
  1407     0008  00F2               	movwf	??_isr+2
  1408     0009  120A  118A  29E0   	ljmp	_isr
  1409                           
  1410                           	psect	idloc
  1411                           
  1412                           ;Config register IDLOC0 @ 0x2000
  1413                           ;	unspecified, using default values
  1414     2000                     	org	8192
  1415     2000  3FFF               	dw	16383
  1416                           
  1417                           ;Config register IDLOC1 @ 0x2001
  1418                           ;	unspecified, using default values
  1419     2001                     	org	8193
  1420     2001  3FFF               	dw	16383
  1421                           
  1422                           ;Config register IDLOC2 @ 0x2002
  1423                           ;	unspecified, using default values
  1424     2002                     	org	8194
  1425     2002  3FFF               	dw	16383
  1426                           
  1427                           ;Config register IDLOC3 @ 0x2003
  1428                           ;	unspecified, using default values
  1429     2003                     	org	8195
  1430     2003  3FFF               	dw	16383
  1431                           
  1432                           	psect	config
  1433                           
  1434                           ;Config register CONFIG1 @ 0x2007
  1435                           ;	Oscillator Selection bits
  1436                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1437                           ;	Watchdog Timer Enable bit
  1438                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1439                           ;	Power-up Timer Enable bit
  1440                           ;	PWRTE = OFF, PWRT disabled
  1441                           ;	RE3/MCLR pin function select bit
  1442                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1443                           ;	Code Protection bit
  1444                           ;	CP = OFF, Program memory code protection is disabled
  1445                           ;	Data Code Protection bit
  1446                           ;	CPD = OFF, Data memory code protection is disabled
  1447                           ;	Brown Out Reset Selection bits
  1448                           ;	BOREN = OFF, BOR disabled
  1449                           ;	Internal External Switchover bit
  1450                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1451                           ;	Fail-Safe Clock Monitor Enabled bit
  1452                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1453                           ;	Low Voltage Programming Enable bit
  1454                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1455                           ;	In-Circuit Debugger Mode bit
  1456                           ;	DEBUG = 0x1, unprogramme  1457     2007                     	org	8199
  1458     2007  20D4               	dw	8404
  1459                           
  1460                           ;Config register CONFIG2 @ 0x2008
  1461                           ;	Brown-out Reset Selection bit
  1462                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1463                           ;	Flash Program Memory Self Write Enable bits
  1464                           ;	WRT = OFF, Write protection off
  1465     2008                     	org	8200
  1466     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     30      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _mapear->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mapear
    _mapear->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1725
                                             20 BANK0     10    10      0
                             _mapear
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _mapear                                              12     2     10    1633
                                              8 BANK0     12     2     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mapear
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 14 08:20:07 2023

                     l72 0028                       l75 0065                       l92 01BA  
                     l86 0178                       l78 00A2                       l88 017C  
                     l89 0181             ___awdiv@sign 0025      ___wmul@multiplicand 0075  
        mapear@nuevo_max 0030          mapear@nuevo_min 002E                      l331 011F  
                    l180 01DF                      l178 01C7                      l900 00DA  
                    l910 00FD                      l902 00DD                      l920 0116  
                    l912 0103                      l904 00E4                      l922 011B  
                    l914 0104                      l906 00E8                      l930 012B  
                    l916 010B                      l908 00EC                      l940 0136  
                    l932 012C                      l918 0111                      l870 01BD  
                    l950 013D                      l942 0137                      l934 012D  
                    l926 0120                      l872 01C1                      l960 0151  
                    l952 013E                      l944 0138                      l936 012E  
                    l928 0129                      l890 00C5                      l882 00B7  
                    l874 01CE                      l970 015A                      l962 0154  
                    l954 0141                      l946 0139                      l938 0132  
                    l892 00C9                      l884 00BA                      l876 01D5  
                    l868 01BB                      l980 0168                      l972 015D  
                    l964 0155                      l956 0142                      l948 013A  
                    l894 00CE                      l886 00BE                      l878 01DB  
                    l990 0172                      l982 016C                      l974 015E  
                    l966 0156                      l958 0148                      l896 00D2  
                    l888 00C3                      l992 0173                      l984 016E  
                    l976 0160                      l968 0159                      l898 00D4  
                    l994 0174                      l986 0170                      l978 0164  
                    l996 0175                      l988 0171                      l998 0177  
                    u210 01C1                      u211 01C0                      u310 00FD  
                    u311 00FC                      u240 01DB                      u400 00A6  
                    u305 00ED                      u241 01DA                      u225 01C8  
                    u401 00A5                      u330 0111                      u250 00BE  
                    u331 0110                      u315 00F9                      u251 00BD  
                    u235 01CF                      u340 0116                      u260 00C9  
                    u341 0115                      u325 0105                      u261 00C8  
                    u270 00DA                      u350 017C                      _PR2 0092  
                    u271 00D9                      u351 017B                      u417 0020  
                    u290 00EC                      u291 00EB                      u427 0059  
                    u380 002C                      u285 00DE                      u437 0096  
                    u381 002B                      u390 0069                      u447 00AE  
                    u391 0068                      u457 014C                      _isr 01E0  
                   l1000 0182                     l1002 01B6                     l1020 001C  
                   l1030 0051                     l1022 0023                     l1040 0070  
                   l1032 0053                     l1024 0027                     l1050 00A6  
                   l1042 008E                     l1034 005E                     l1026 002C  
                   l1018 0017                     l1044 0090                     l1036 0064  
                   l1028 0033                     l1046 009B                     l1038 0069  
                   l1048 00A1                     _ADIF 0066                     ?_isr 0070  
                   i1l64 01F2                     i1l66 01F6                     _TMR0 0001  
                   _main 0017                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0120  
                  _ANSEL 0188          ___awdiv@divisor 0020          ___awdiv@counter 0024  
                  u36_20 01E4                    u36_21 01E3                    u37_20 01F0  
                  u37_21 01EF                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _setup 0120                    pclath 000A  
                  status 0003                    wtemp0 007E              mapear@valor 0028  
        __initialization 000F             __end_of_main 00B7                   ??_main 0034  
                 _ADRESH 001E                   _CCPR1L 0015                   _CCPR2L 001B  
       ___awdiv@dividend 0022                   ?_setup 0070                   _ANSELH 0189  
                 i1l1010 01E8                   i1l1012 01F0                   i1l1014 01F3  
                 i1l1006 01E0                   i1l1016 01F5                   i1l1008 01E4  
                 ___wmul 01BB                ??___awdiv 0079                   _mapear 0182  
       ___awdiv@quotient 0026                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070            __end_of_setup 0182           _OPTION_REGbits 0081  
                ??_setup 0073               __pbssBANK0 003E               __pmaintext 0017  
                ?___wmul 0073               __pintentry 0004                  ?_mapear 0028  
                ___awdiv 00B7                _ANSELbits 0188                  __ptext1 0120  
                __ptext2 0182                  __ptext3 01BB                  __ptext4 00B7  
                __ptext5 01E0                _T2CONbits 0012     end_of_initialization 0013  
              _PORTCbits 0007          main@adc_value_1 0036          main@adc_value_2 003A  
          mapear@new_val 0032                _TRISAbits 0085                _TRISCbits 0087  
            _CCP1CONbits 0017              _CCP2CONbits 001D               main@servo1 0038  
             main@servo2 003C           __end_of___wmul 01E0           __end_of_mapear 01BB  
    start_initialization 000F              __end_of_isr 01FD                 ??___wmul 0077  
               ??_mapear 007A              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0020        interrupt_function 0004  
         ___wmul@product 0077                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F        ___wmul@multiplier 0073                 _contador 007A  
               _pot_val3 003E               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F          mapear@rango_max 002C          mapear@rango_min 002A  
